!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("xmldom")):"function"==typeof define&&define.amd?define(["xmldom"],t):(e||self).htmlToJsonParser=t(e.xmldom)}(this,function(e){return function(t,n){void 0===n&&(n=!1);try{return Promise.resolve(new Promise(function(o,r){try{var i,l={};if("string"==typeof t){var s=(new e.DOMParser).parseFromString(t,"text/xml");s.firstChild&&(i=s.firstChild)}else i=t;!function e(t,n){void 0===n&&(n=l),n.type=t.nodeName;var o=t.childNodes;if(null!==o&&o.length){n.content=[];for(var r=0;r<o.length;r++)3===o[r].nodeType?o[r].nodeValue&&n.content.push(o[r].nodeValue):(n.content.push({}),e(o[r],n.content[n.content.length-1]))}if(null!==t.attributes&&t.attributes.length){n.attributes={};for(var i=0;i<t.attributes.length;i++)n.attributes[t.attributes[i].nodeName]=t.attributes[i].nodeValue}}(i),o(n?JSON.stringify(l):l)}catch(e){r(e)}}))}catch(e){return Promise.reject(e)}}});
//# sourceMappingURL=index.umd.js.map
