import{DOMParser as t}from"xmldom";var e=function(e,n){void 0===n&&(n=!1);try{return Promise.resolve(new Promise(function(r,o){try{var i,a={};if("string"==typeof e){var s=(new t).parseFromString(e,"text/xml");s.firstChild&&(i=s.firstChild)}else i=e;!function t(e,n){void 0===n&&(n=a),n.type=e.nodeName;var r=e.childNodes;if(null!==r&&r.length){n.content=[];for(var o=0;o<r.length;o++)3===r[o].nodeType?r[o].nodeValue&&n.content.push(r[o].nodeValue):(n.content.push({}),t(r[o],n.content[n.content.length-1]))}if(null!==e.attributes&&e.attributes.length){n.attributes={};for(var i=0;i<e.attributes.length;i++)n.attributes[e.attributes[i].nodeName]=e.attributes[i].nodeValue}}(i),r(n?JSON.stringify(a):a)}catch(t){o(t)}}))}catch(t){return Promise.reject(t)}};export{e as default};
//# sourceMappingURL=index.module.js.map
